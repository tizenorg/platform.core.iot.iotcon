<node>
	<interface name="org.tizen.iotcon.dbus">
		<method name="initialize">
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="registerResource">
			<arg type="s" name="uri_path" direction="in"/>
			<arg type="as" name="resource_types" direction="in"/>
			<arg type="as" name="ifaces" direction="in"/>
			<arg type="i" name="properties" direction="in"/>
			<arg type="b" name="is_lite" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="x" name="resource" direction="out"/>
		</method>
		<method name="unregisterResource">
			<arg type="x" name="resource" direction="in"/>
		</method>
		<method name="bindInterface">
			<arg type="x" name="resource" direction="in"/>
			<arg type="s" name="iface" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="bindType">
			<arg type="x" name="resource" direction="in"/>
			<arg type="s" name="type" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="bindResource">
			<arg type="x" name="parent" direction="in"/>
			<arg type="x" name="child" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="unbindResource">
			<arg type="x" name="parent" direction="in"/>
			<arg type="x" name="child" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="notify">
			<arg type="x" name="resource" direction="in"/>
			<arg type="av" name="notify_msg" direction="in"/>
			<arg type="ai" name="observers" direction="in"/>
			<arg type="i" name="qos" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="sendResponse">
			<arg type="(a(qs)ivxx)" name="response" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="findResource">
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="s" name="type" direction="in"/>
			<arg type="b" name="is_secure" direction="in"/>
			<arg type="i" name="timeout" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="get">
			<arg type="(ssba(qs)i)" name="remote_resource" direction="in"/>
			<arg type="a(ss)" name="query" direction="in"/>
			<arg type="(a(qs)vi)" name="ret" direction="out"/>
		</method>
		<method name="put">
			<arg type="(ssba(qs)i)" name="remote_resource" direction="in"/>
			<arg type="(sasasa{sv}av)" name="repr" direction="in"/>
			<arg type="a(ss)" name="query" direction="in"/>
			<arg type="(a(qs)vi)" name="ret" direction="out"/>
		</method>
		<method name="post">
			<arg type="(ssba(qs)i)" name="remote_resource" direction="in"/>
			<arg type="(sasasa{sv}av)" name="repr" direction="in"/>
			<arg type="a(ss)" name="query" direction="in"/>
			<arg type="(a(qs)vi)" name="ret" direction="out"/>
		</method>
		<method name="delete">
			<arg type="(ssba(qs)i)" name="remote_resource" direction="in"/>
			<arg type="(a(qs)i)" name="ret" direction="out"/>
		</method>
		<method name="observerStart">
			<arg type="(ssba(qs)i)" name="remote_resource" direction="in"/>
			<arg type="i" name="observe_type" direction="in"/>
			<arg type="a(ss)" name="query" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="x" name="observe_h" direction="out"/>
		</method>
		<method name="observerStop">
			<arg type="x" name="observe_h" direction="in"/>
			<arg type="a(qs)" name="options" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="getDeviceInfo">
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="i" name="timeout" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="getPlatformInfo">
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="i" name="timeout" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="subscribePresence">
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="s" name="type" direction="in"/>
			<arg type="x" name="presence_h" direction="out"/>
		</method>
		<method name="unsubscribePresence">
			<arg type="x" name="presence_h" direction="in"/>
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="startPresence">
			<arg type="u" name="time_to_live" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="stopPresence">
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="startMonitoring">
			<arg type="s" name="uri_path" direction="in"/>
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="stopMonitoring">
			<arg type="s" name="uri_path" direction="in"/>
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="startCaching">
			<arg type="s" name="uri_path" direction="in"/>
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="connectivity" direction="in"/>
			<arg type="x" name="signal_number" direction="out"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="stopCaching">
			<arg type="s" name="uri_path" direction="in"/>
			<arg type="s" name="host_address" direction="in"/>
			<arg type="i" name="ret" direction="out"/>
		</method>
		<method name="encapGetTimeInterval">
			<arg type="i" name="time_interval" direction="out"/>
		</method>
		<method name="encapSetTimeInterval">
			<arg type="i" name="time_interval" direction="in"/>
		</method>
	</interface>
</node>
